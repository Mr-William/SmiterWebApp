<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="36" passed="36" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-17T13:50:19 CST" name="Default suite" finished-at="2023-01-17T13:50:21 CST" duration-ms="1493">
    <groups>
    </groups>
    <test started-at="2023-01-17T13:50:19 CST" name="Default test" finished-at="2023-01-17T13:50:21 CST" duration-ms="1493">
      <class name="testpackage.servicetests.MovieServiceTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:19 CST" name="springTestContextBeforeTestClass" finished-at="2023-01-17T13:50:19 CST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:19 CST" name="springTestContextPrepareTestInstance" finished-at="2023-01-17T13:50:20 CST" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidId_returnsNull()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="invalidId_returnsNull" finished-at="2023-01-17T13:50:20 CST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidId_returnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="updatingEmptyTitle_ReturnsNull()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="updatingEmptyTitle_ReturnsNull" finished-at="2023-01-17T13:50:20 CST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatingEmptyTitle_ReturnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenEmptyTitle_MovieNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenEmptyTitle_MovieNotSaved()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenEmptyTitle_MovieNotSaved" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenEmptyTitle_MovieNotSaved -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenEmptyTitle_MovieNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenGivenValidId_DeleteMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGivenValidId_DeleteMovie()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenGivenValidId_DeleteMovie" finished-at="2023-01-17T13:50:20 CST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGivenValidId_DeleteMovie -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenGivenValidId_DeleteMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenMovieAdded_returnMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenMovieAdded_returnMovie()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenMovieAdded_returnMovie" finished-at="2023-01-17T13:50:20 CST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenMovieAdded_returnMovie -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenMovieAdded_returnMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenMovieUpdated_returnMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenMovieUpdated_returnMovie()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenMovieUpdated_returnMovie" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenMovieUpdated_returnMovie -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenMovieUpdated_returnMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenMoviesIsCalled_ShowAllMovies()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenMoviesIsCalled_ShowAllMovies()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenMoviesIsCalled_ShowAllMovies" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenMoviesIsCalled_ShowAllMovies -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenMoviesIsCalled_ShowAllMovies()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenNoMoviesExist_NoMoviesShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenNoMoviesExist_NoMoviesShown()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenNoMoviesExist_NoMoviesShown" finished-at="2023-01-17T13:50:20 CST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenNoMoviesExist_NoMoviesShown -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenNoMoviesExist_NoMoviesShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenValidIdGiven_returnMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenValidIdGiven_returnMovie()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="whenValidIdGiven_returnMovie" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenValidIdGiven_returnMovie -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MovieServiceTest.whenValidIdGiven_returnMovie()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:testpackage.servicetests.MovieServiceTest@3300f4fd]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestClass" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- testpackage.servicetests.MovieServiceTest -->
      <class name="testpackage.servicetests.MusicServiceTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestClass" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:20 CST" name="springTestContextPrepareTestInstance" finished-at="2023-01-17T13:50:21 CST" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidId_returnsNull()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="invalidId_returnsNull" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidId_returnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="updatingEmptyTitle_ReturnsNull()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="updatingEmptyTitle_ReturnsNull" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatingEmptyTitle_ReturnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenEmptyTitle_MusicNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenEmptyTitle_MusicNotSaved()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenEmptyTitle_MusicNotSaved" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenEmptyTitle_MusicNotSaved -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenEmptyTitle_MusicNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenGivenValidId_DeleteMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGivenValidId_DeleteMusic()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenGivenValidId_DeleteMusic" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGivenValidId_DeleteMusic -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenGivenValidId_DeleteMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenMusicAdded_returnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenMusicAdded_returnMusic()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenMusicAdded_returnMusic" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenMusicAdded_returnMusic -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenMusicAdded_returnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenMusicUpdated_returnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenMusicUpdated_returnMusic()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenMusicUpdated_returnMusic" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenMusicUpdated_returnMusic -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenMusicUpdated_returnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenMusicsIsCalled_ShowAllMusics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenMusicsIsCalled_ShowAllMusics()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenMusicsIsCalled_ShowAllMusics" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenMusicsIsCalled_ShowAllMusics -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenMusicsIsCalled_ShowAllMusics()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenNoMusicsExist_NoMusicsShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenNoMusicsExist_NoMusicsShown()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenNoMusicsExist_NoMusicsShown" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenNoMusicsExist_NoMusicsShown -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenNoMusicsExist_NoMusicsShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenValidIdGiven_returnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="whenValidIdGiven_returnMusic()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="whenValidIdGiven_returnMusic" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenValidIdGiven_returnMusic -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.MusicServiceTest.whenValidIdGiven_returnMusic()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:testpackage.servicetests.MusicServiceTest@180da663]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestClass" finished-at="2023-01-17T13:50:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- testpackage.servicetests.MusicServiceTest -->
      <class name="testpackage.servicetests.BookServiceTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestClass" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextPrepareTestInstance" finished-at="2023-01-17T13:50:20 CST" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidId_returnsNull()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="invalidId_returnsNull" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidId_returnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="updatingEmptyTitle_ReturnsNull()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="updatingEmptyTitle_ReturnsNull" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatingEmptyTitle_ReturnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenBookAdded_returnBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenBookAdded_returnBook()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenBookAdded_returnBook" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenBookAdded_returnBook -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenBookAdded_returnBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenBookUpdated_returnBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenBookUpdated_returnBook()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenBookUpdated_returnBook" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenBookUpdated_returnBook -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenBookUpdated_returnBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenBooksIsCalled_ShowAllBooks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenBooksIsCalled_ShowAllBooks()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenBooksIsCalled_ShowAllBooks" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenBooksIsCalled_ShowAllBooks -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenBooksIsCalled_ShowAllBooks()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenEmptyTitle_BookNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenEmptyTitle_BookNotSaved()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenEmptyTitle_BookNotSaved" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenEmptyTitle_BookNotSaved -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenEmptyTitle_BookNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenGivenValidId_DeleteBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGivenValidId_DeleteBook()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenGivenValidId_DeleteBook" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGivenValidId_DeleteBook -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenGivenValidId_DeleteBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenNoBooksExist_NoBooksShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenNoBooksExist_NoBooksShown()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenNoBooksExist_NoBooksShown" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenNoBooksExist_NoBooksShown -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenNoBooksExist_NoBooksShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenValidIdGiven_returnBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="init" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenValidIdGiven_returnBook()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="whenValidIdGiven_returnBook" finished-at="2023-01-17T13:50:20 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenValidIdGiven_returnBook -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:20 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.BookServiceTest.whenValidIdGiven_returnBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:testpackage.servicetests.BookServiceTest@26bab2f1]" started-at="2023-01-17T13:50:20 CST" name="springTestContextAfterTestClass" finished-at="2023-01-17T13:50:20 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- testpackage.servicetests.BookServiceTest -->
      <class name="testpackage.servicetests.GameServiceTest">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestClass" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextPrepareTestInstance" finished-at="2023-01-17T13:50:21 CST" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidId_returnsNull()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="invalidId_returnsNull" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidId_returnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.invalidId_returnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="updatingEmptyTitle_ReturnsNull()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="updatingEmptyTitle_ReturnsNull" finished-at="2023-01-17T13:50:21 CST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatingEmptyTitle_ReturnsNull -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.updatingEmptyTitle_ReturnsNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenEmptyTitle_GameNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenEmptyTitle_GameNotSaved()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenEmptyTitle_GameNotSaved" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenEmptyTitle_GameNotSaved -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenEmptyTitle_GameNotSaved()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGameAdded_returnGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGameAdded_returnGame()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenGameAdded_returnGame" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGameAdded_returnGame -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGameAdded_returnGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGameUpdated_returnGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGameUpdated_returnGame()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenGameUpdated_returnGame" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGameUpdated_returnGame -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGameUpdated_returnGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGamesIsCalled_ShowAllGames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGamesIsCalled_ShowAllGames()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenGamesIsCalled_ShowAllGames" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGamesIsCalled_ShowAllGames -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGamesIsCalled_ShowAllGames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGivenValidId_DeleteGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenGivenValidId_DeleteGame()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenGivenValidId_DeleteGame" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenGivenValidId_DeleteGame -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenGivenValidId_DeleteGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenNoGamesExist_NoGamesShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="whenNoGamesExist_NoGamesShown()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenNoGamesExist_NoGamesShown" finished-at="2023-01-17T13:50:21 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenNoGamesExist_NoGamesShown -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenNoGamesExist_NoGamesShown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextBeforeTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenValidIdGiven_returnGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="whenValidIdGiven_returnGame()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="whenValidIdGiven_returnGame" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whenValidIdGiven_returnGame -->
        <test-method is-config="true" signature="init()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="init" finished-at="2023-01-17T13:50:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestMethod" finished-at="2023-01-17T13:50:21 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testpackage.servicetests.GameServiceTest.whenValidIdGiven_returnGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:testpackage.servicetests.GameServiceTest@37052337]" started-at="2023-01-17T13:50:21 CST" name="springTestContextAfterTestClass" finished-at="2023-01-17T13:50:21 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- testpackage.servicetests.GameServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
